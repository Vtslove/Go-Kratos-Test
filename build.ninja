
rule rule_install_1
 command = go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
rule rule_install_2
 command = go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
rule rule_install_3
 command = go install github.com/go-kratos/kratos/cmd/protoc-gen-go-http/v2@latest
rule rule_install_4
 command = go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@latest
rule rule_install_5
 command = go install github.com/google/wire/cmd/wire@latest
rule rule_install_6
 command = go install github.com/swaggo/swag/cmd/swag@latest
rule rule_install_7
 command = go install github.com/google/gnostic@latest
rule rule_install_8
 command = go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

# 安装相关CLI和插件
build build_install_1: rule_install_1
build build_install_2: rule_install_2
build build_install_3: rule_install_3
build build_install_4: rule_install_4
build build_install_5: rule_install_5
build build_install_6: rule_install_6
build build_install_7: rule_install_7
build build_install_8: rule_install_8
build init: phony build_install_1 build_install_2 build_install_3 build_install_4 build_install_5 build_install_6 build_install_7 build_install_8


# 下载依赖库
rule rule_dep
 command = go mod download
build dep: rule_dep

# 创建依赖库
rule rule_vendor
 command = go mod vendor
build vendor: rule_vendor

# 生成Wire代码
rule rule_wire
 command = wire ./cmd/server
build wire: rule_wire

# 生成所有的Protobuf API代码
rule rule_api
 command = go generate ../../../api/...
build api: rule_api

# 生成Protobuf配置代码
rule rule_conf
 command = go generate ./internal/conf/...
build conf: rule_conf

# 生成Ent代码
rule rule_ent
 command = go generate ./internal/data/ent/...
build ent: rule_ent

# 直接运行程序
rule rule_run
 command = go run ./cmd/server -conf ./configs
build run: rule_run

# 执行单元测试
rule rule_test
 command = go test ./...
build test: rule_test

# 执行覆盖率测试
rule rule_cover
 command = go test -v ./... -coverprofile=coverage.out
build cover: rule_cover

# 执行代码静态检查
rule rule_vet
 command = go vet
build vet: rule_vet

# 执行代码检查
rule rule_lint
 command = golangci-lint run
build lint: rule_lint

# 执行所有
build all: phony api wire conf build test

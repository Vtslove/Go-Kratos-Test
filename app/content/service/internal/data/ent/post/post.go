// Code generated by ent, DO NOT EDIT.

package post

const (
	// Label holds the string label denoting the post type in the database.
	Label = "post"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldDeleteTime holds the string denoting the delete_time field in the database.
	FieldDeleteTime = "delete_time"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldSlug holds the string denoting the slug field in the database.
	FieldSlug = "slug"
	// FieldMetaKeywords holds the string denoting the meta_keywords field in the database.
	FieldMetaKeywords = "meta_keywords"
	// FieldMetaDescription holds the string denoting the meta_description field in the database.
	FieldMetaDescription = "meta_description"
	// FieldFullPath holds the string denoting the full_path field in the database.
	FieldFullPath = "full_path"
	// FieldOriginalContent holds the string denoting the original_content field in the database.
	FieldOriginalContent = "original_content"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldSummary holds the string denoting the summary field in the database.
	FieldSummary = "summary"
	// FieldThumbnail holds the string denoting the thumbnail field in the database.
	FieldThumbnail = "thumbnail"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldTemplate holds the string denoting the template field in the database.
	FieldTemplate = "template"
	// FieldCommentCount holds the string denoting the comment_count field in the database.
	FieldCommentCount = "comment_count"
	// FieldVisits holds the string denoting the visits field in the database.
	FieldVisits = "visits"
	// FieldLikes holds the string denoting the likes field in the database.
	FieldLikes = "likes"
	// FieldWordCount holds the string denoting the word_count field in the database.
	FieldWordCount = "word_count"
	// FieldTopPriority holds the string denoting the top_priority field in the database.
	FieldTopPriority = "top_priority"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldEditorType holds the string denoting the editor_type field in the database.
	FieldEditorType = "editor_type"
	// FieldEditTime holds the string denoting the edit_time field in the database.
	FieldEditTime = "edit_time"
	// FieldDisallowComment holds the string denoting the disallow_comment field in the database.
	FieldDisallowComment = "disallow_comment"
	// FieldInProgress holds the string denoting the in_progress field in the database.
	FieldInProgress = "in_progress"
	// Table holds the table name of the post in the database.
	Table = "post"
)

// Columns holds all SQL columns for post fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldDeleteTime,
	FieldTitle,
	FieldSlug,
	FieldMetaKeywords,
	FieldMetaDescription,
	FieldFullPath,
	FieldOriginalContent,
	FieldContent,
	FieldSummary,
	FieldThumbnail,
	FieldPassword,
	FieldTemplate,
	FieldCommentCount,
	FieldVisits,
	FieldLikes,
	FieldWordCount,
	FieldTopPriority,
	FieldStatus,
	FieldEditorType,
	FieldEditTime,
	FieldDisallowComment,
	FieldInProgress,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() int64
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() int64
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(uint32) error
)

syntax = "proto3";

package admin.service.v1;
option go_package = "kratos-blog/api/admin/service/v1;v1";

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "pagination.proto";
import "comment.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "评论管理接口";
    description: "评论管理";
    version: "1.0";
  }
};

// 变量的命名一律使用小驼峰命名法，例如：firstName、lastName等。

// 评论服务
service CommentService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "CommentService -- 评论服务"
    external_docs: {
      url: "https://github.com/grpc-ecosystem/grpc-gateway";
      description: "Find out more about EchoService";
    }
  };

  // 获取评论列表
  rpc ListComment (pagination.PagingRequest) returns (comment.service.v1.ListCommentResponse) {
    option (google.api.http) = {
      get: "/blog/v1/comments"
    };
  }

  // 获取评论数据
  rpc GetComment (comment.service.v1.GetCommentRequest) returns (comment.service.v1.Comment) {
    option (google.api.http) = {
      get: "/blog/v1/comments/{id}"
    };
  }

  // 创建评论
  rpc CreateComment (comment.service.v1.CreateCommentRequest) returns (comment.service.v1.Comment) {
    option (google.api.http) = {
      post: "/blog/v1/comments"
      body: "*"
    };
  }

  // 更新评论
  rpc UpdateComment (comment.service.v1.UpdateCommentRequest) returns (comment.service.v1.Comment) {
    option (google.api.http) = {
      put: "/blog/v1/comments/{id}"
      body: "comment"
    };
  }

  // 删除评论
  rpc DeleteComment (comment.service.v1.DeleteCommentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/blog/v1/comments/{id}"
    };
  }
}

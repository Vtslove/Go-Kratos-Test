syntax = "proto3";

package admin.service.v1;
option go_package = "kratos-blog/gen/api/go/admin/service/v1;v1";

import "gnostic/openapi/v3/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "user/service/v1/user.proto";

option (gnostic.openapi.v3.document) = {
  info: {
    title: "用户管理接口";
    description: "用户管理";
    version: "1.0";
  }
};

// 变量的命名一律使用小驼峰命名法，例如：firstName、lastName等。

// 用户服务
service UserService {
  // 登陆
  rpc Login (user.service.v1.LoginRequest) returns (user.service.v1.LoginResponse) {
    option (google.api.http) = {
      post: "/blog/v1/login"
      body: "*"
    };
  }

  // 登出
  rpc Logout (user.service.v1.LogoutRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/blog/v1/logout"
      body: "*"
    };
  }

  // 注册
  rpc Register (user.service.v1.RegisterRequest) returns (user.service.v1.RegisterResponse) {
    option (google.api.http) = {
      post: "/blog/v1/register"
      body: "*"
    };
  }

  // 获取已经登陆的用户的数据
  rpc GetMe (user.service.v1.GetMeRequest) returns (user.service.v1.User) {
    option (google.api.http) = {
      get: "/blog/v1/me"
    };
  }
}

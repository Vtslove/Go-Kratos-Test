// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"kratos-blog/app/admin/service/internal/conf"
	"kratos-blog/app/admin/service/internal/data"
	"kratos-blog/app/admin/service/internal/server"
	"kratos-blog/app/admin/service/internal/service"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, registry *conf.Registry, confData *conf.Data, auth *conf.Auth, logger log.Logger) (*kratos.App, func(), error) {
	discovery := data.NewDiscovery(registry)
	userServiceClient := data.NewUserServiceClient(discovery)
	userService := service.NewUserService(logger, userServiceClient)
	postServiceClient := data.NewPostServiceClient(discovery)
	postService := service.NewPostService(logger, postServiceClient)
	linkServiceClient := data.NewLinkServiceClient(discovery)
	linkService := service.NewLinkService(logger, linkServiceClient)
	categoryServiceClient := data.NewCategoryServiceClient(discovery)
	categoryService := service.NewCategoryService(logger, categoryServiceClient)
	commentServiceClient := data.NewCommentServiceClient(discovery)
	commentService := service.NewCommentService(logger, commentServiceClient)
	tagServiceClient := data.NewTagServiceClient(discovery)
	tagService := service.NewTagService(logger, tagServiceClient)
	attachmentServiceClient := data.NewAttachmentServiceClient(discovery)
	attachmentService := service.NewAttachmentService(logger, attachmentServiceClient)
	httpServer := server.NewHTTPServer(confServer, auth, logger, userService, postService, linkService, categoryService, commentService, tagService, attachmentService)
	registrar := server.NewRegistrar(registry)
	app := newApp(logger, httpServer, registrar)
	return app, func() {
	}, nil
}
